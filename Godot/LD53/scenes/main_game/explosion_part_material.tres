[gd_resource type="ShaderMaterial" load_steps=34 format=2]

[sub_resource type="VisualShaderNodeColorUniform" id=2]
uniform_name = "base_color"

[sub_resource type="VisualShaderNodeInput" id=28]
input_name = "alpha"

[sub_resource type="VisualShaderNodeInput" id=29]
input_name = "alpha"

[sub_resource type="VisualShaderNodeScalarOp" id=30]
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=31]
operator = 6

[sub_resource type="VisualShaderNodeTextureUniform" id=32]
uniform_name = "emission_noise"

[sub_resource type="VisualShaderNodeVectorOp" id=33]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=34]
uniform_name = "emission_strength"

[sub_resource type="VisualShaderNodeScalarOp" id=35]
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=3]
uniform_name = "alpha_mask"

[sub_resource type="VisualShaderNodeScalarFunc" id=4]
function = 15

[sub_resource type="VisualShaderNodeScalarOp" id=6]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=7]
default_input_values = [ 0, 0.0, 1, 0.5 ]

[sub_resource type="VisualShaderNodeColorUniform" id=8]
uniform_name = "emission_color"

[sub_resource type="VisualShaderNodeVectorOp" id=9]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=15]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=16]

[sub_resource type="VisualShaderNodeVectorOp" id=17]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0.125, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=18]
uniform_name = "displacement_texture"

[sub_resource type="VisualShaderNodeInput" id=19]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=20]

[sub_resource type="VisualShaderNodeVectorOp" id=21]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=22]
input_name = "normal"

[sub_resource type="VisualShaderNodeVectorOp" id=23]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=24]
uniform_name = "displace"

[sub_resource type="VisualShaderNodeInput" id=25]
input_name = "time"

[sub_resource type="VisualShader" id=11]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled, specular_schlick_ggx, async_visible;

uniform sampler2D displacement_texture;
uniform float displace;
uniform vec4 base_color : hint_color;
uniform sampler2D alpha_mask;
uniform sampler2D emission_noise;
uniform vec4 emission_color : hint_color;
uniform float emission_strength;



void vertex() {
// Input:3
	vec3 n_out3p0 = VERTEX;

// Input:6
	vec3 n_out6p0 = NORMAL;

// Input:11
	vec3 n_out11p0 = vec3(UV, 0.0);

// Input:9
	float n_out9p0 = TIME;

// VectorOp:13
	vec3 n_in13p1 = vec3(0.00000, 0.12500, 0.00000);
	vec3 n_out13p0 = vec3(n_out9p0) * n_in13p1;

// VectorOp:12
	vec3 n_out12p0 = n_out11p0 + n_out13p0;

// TextureUniform:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 n_tex_read = texture(displacement_texture, n_out12p0.xy);
		n_out2p0 = n_tex_read.rgb;
		n_out2p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out6p0 * n_out2p0;

// ScalarUniform:8
	float n_out8p0 = displace;

// VectorOp:7
	vec3 n_out7p0 = n_out5p0 * vec3(n_out8p0);

// VectorOp:4
	vec3 n_out4p0 = n_out3p0 + n_out7p0;

// Output:0
	VERTEX = n_out4p0;

}

void fragment() {
// ColorUniform:10
	vec3 n_out10p0 = base_color.rgb;
	float n_out10p1 = base_color.a;

// TextureUniform:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 n_tex_read = texture(alpha_mask, UV.xy);
		n_out2p0 = n_tex_read.rgb;
		n_out2p1 = n_tex_read.a;
	}

// Input:11
	float n_out11p0 = COLOR.a;

// ScalarOp:6
	float n_in6p1 = 0.50000;
	float n_out6p0 = n_out11p0 + n_in6p1;

// ScalarOp:5
	float n_out5p0 = dot(n_out2p0, vec3(0.333333, 0.333333, 0.333333)) * n_out6p0;

// ScalarFunc:3
	float n_out3p0 = round(n_out5p0);

// TextureUniform:15
	vec3 n_out15p0;
	float n_out15p1;
	{
		vec4 n_tex_read = texture(emission_noise, UV.xy);
		n_out15p0 = n_tex_read.rgb;
		n_out15p1 = n_tex_read.a;
	}

// ColorUniform:7
	vec3 n_out7p0 = emission_color.rgb;
	float n_out7p1 = emission_color.a;

// VectorOp:16
	vec3 n_out16p0 = n_out15p0 * n_out7p0;

// Input:12
	float n_out12p0 = COLOR.a;

// ScalarOp:13
	float n_in13p1 = 0.50000;
	float n_out13p0 = n_out12p0 - n_in13p1;

// ScalarOp:14
	float n_in14p1 = 0.00000;
	float n_out14p0 = max(n_out13p0, n_in14p1);

// ScalarUniform:17
	float n_out17p0 = emission_strength;

// ScalarOp:18
	float n_out18p0 = n_out14p0 * n_out17p0;

// VectorOp:8
	vec3 n_out8p0 = n_out16p0 * vec3(n_out18p0);

// Output:0
	ALBEDO = n_out10p0;
	ALPHA = n_out3p0;
	EMISSION = n_out8p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -823.446, 94.1442 )
modes/cull = 2
modes/depth_draw = 3
nodes/vertex/0/position = Vector2( 720, 160 )
nodes/vertex/2/node = SubResource( 18 )
nodes/vertex/2/position = Vector2( -340, 160 )
nodes/vertex/3/node = SubResource( 19 )
nodes/vertex/3/position = Vector2( -40, 100 )
nodes/vertex/4/node = SubResource( 20 )
nodes/vertex/4/position = Vector2( 320, 100 )
nodes/vertex/5/node = SubResource( 21 )
nodes/vertex/5/position = Vector2( -120, 200 )
nodes/vertex/6/node = SubResource( 22 )
nodes/vertex/6/position = Vector2( -300, 60 )
nodes/vertex/7/node = SubResource( 23 )
nodes/vertex/7/position = Vector2( 120, 180 )
nodes/vertex/8/node = SubResource( 24 )
nodes/vertex/8/position = Vector2( -220, 380 )
nodes/vertex/9/node = SubResource( 25 )
nodes/vertex/9/position = Vector2( -940, 380 )
nodes/vertex/11/node = SubResource( 15 )
nodes/vertex/11/position = Vector2( -760, 200 )
nodes/vertex/12/node = SubResource( 16 )
nodes/vertex/12/position = Vector2( -540, 220 )
nodes/vertex/13/node = SubResource( 17 )
nodes/vertex/13/position = Vector2( -720, 360 )
nodes/vertex/connections = PoolIntArray( 3, 0, 4, 0, 4, 0, 0, 0, 6, 0, 5, 0, 2, 0, 5, 1, 7, 0, 4, 1, 5, 0, 7, 0, 8, 0, 7, 1, 11, 0, 12, 0, 12, 0, 2, 0, 9, 0, 13, 0, 13, 0, 12, 1 )
nodes/fragment/0/position = Vector2( 620, 140 )
nodes/fragment/2/node = SubResource( 3 )
nodes/fragment/2/position = Vector2( -520, 0 )
nodes/fragment/3/node = SubResource( 4 )
nodes/fragment/3/position = Vector2( 240, 140 )
nodes/fragment/5/node = SubResource( 6 )
nodes/fragment/5/position = Vector2( 60, 120 )
nodes/fragment/6/node = SubResource( 7 )
nodes/fragment/6/position = Vector2( -580, 220 )
nodes/fragment/7/node = SubResource( 8 )
nodes/fragment/7/position = Vector2( -200, 440 )
nodes/fragment/8/node = SubResource( 9 )
nodes/fragment/8/position = Vector2( 360, 300 )
nodes/fragment/10/node = SubResource( 2 )
nodes/fragment/10/position = Vector2( 200, -40 )
nodes/fragment/11/node = SubResource( 28 )
nodes/fragment/11/position = Vector2( -840, 220 )
nodes/fragment/12/node = SubResource( 29 )
nodes/fragment/12/position = Vector2( -340, 620 )
nodes/fragment/13/node = SubResource( 30 )
nodes/fragment/13/position = Vector2( -140, 620 )
nodes/fragment/14/node = SubResource( 31 )
nodes/fragment/14/position = Vector2( 40, 620 )
nodes/fragment/15/node = SubResource( 32 )
nodes/fragment/15/position = Vector2( -120, 240 )
nodes/fragment/16/node = SubResource( 33 )
nodes/fragment/16/position = Vector2( 140, 320 )
nodes/fragment/17/node = SubResource( 34 )
nodes/fragment/17/position = Vector2( -60, 760 )
nodes/fragment/18/node = SubResource( 35 )
nodes/fragment/18/position = Vector2( 280, 520 )
nodes/fragment/connections = PoolIntArray( 3, 0, 0, 1, 2, 0, 5, 0, 5, 0, 3, 0, 6, 0, 5, 1, 8, 0, 0, 5, 10, 0, 0, 0, 11, 0, 6, 0, 12, 0, 13, 0, 13, 0, 14, 0, 16, 0, 8, 0, 15, 0, 16, 0, 7, 0, 16, 1, 14, 0, 18, 0, 18, 0, 8, 1, 17, 0, 18, 1 )

[sub_resource type="OpenSimplexNoise" id=12]

[sub_resource type="NoiseTexture" id=13]
seamless = true
noise = SubResource( 12 )

[sub_resource type="OpenSimplexNoise" id=26]

[sub_resource type="NoiseTexture" id=27]
noise = SubResource( 26 )

[sub_resource type="OpenSimplexNoise" id=36]
period = 86.0
persistence = 0.114

[sub_resource type="NoiseTexture" id=37]
seamless = true
noise = SubResource( 36 )

[resource]
resource_local_to_scene = true
shader = SubResource( 11 )
shader_param/displace = 0.2
shader_param/base_color = Color( 0.235294, 0.223529, 0.223529, 1 )
shader_param/emission_color = Color( 0.952941, 0.431373, 0.0196078, 1 )
shader_param/emission_strength = 80.0
shader_param/displacement_texture = SubResource( 27 )
shader_param/alpha_mask = SubResource( 13 )
shader_param/emission_noise = SubResource( 37 )
